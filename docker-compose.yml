version: '3.7'
services:
  db:
    image: 'postgres:latest'
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
    restart: on-failure
  redis:
    image: redis
    command: redis-server
    volumes:
      - 'redis:/data'
    ports:
      - '6379:6379'
    restart: on-failure
  sidekiq:
    build:
      context: .
    command: bundle exec sidekiq
    links:
      - db
      - redis
    env_file:
      - .env
    restart: unless-stopped
  rails:
    build:
      context: .
      dockerfile: ./Dockerfile
    depends_on:
      - db
      - redis
    env_file:
      - .env
    restart: on-failure
  nginx:
    build:
      context: .
      dockerfile: ./nginx.Dockerfile
    depends_on:
      - rails
    ports:
      - 80:80
      - 443:443
    volumes:
     - ./public:/rails/public
     - /etc/letsencrypt/live/grabli.co/fullchain.pem:/etc/nginx/ssl/fullchain.pem
     - /etc/letsencrypt/live/grabli.co/privkey.pem:/etc/nginx/ssl/privkey.pem
    restart: on-failure
  restarter:
    image: docker:cli
    volumes: ["/var/run/docker.sock:/var/run/docker.sock"]
    command: ["/bin/sh", "-c", "while true; do sleep 1800; docker compose -p leaderboard restart; done"]
    restart: unless-stopped

volumes:
  redis:
  postgres: # named volume
